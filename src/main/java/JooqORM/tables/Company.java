/**
 * This class is generated by jOOQ
 */
package JooqORM.tables;


import JooqORM.Chinesestock;
import JooqORM.Keys;
import JooqORM.tables.records.CompanyRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Company extends TableImpl<CompanyRecord> {

    private static final long serialVersionUID = 1874719104;

    /**
     * The reference instance of <code>ChineseStock.company</code>
     */
    public static final Company COMPANY = new Company();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CompanyRecord> getRecordType() {
        return CompanyRecord.class;
    }

    /**
     * The column <code>ChineseStock.company.stockid</code>. 股票ID
     */
    public final TableField<CompanyRecord, String> STOCKID = createField("stockid", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "股票ID");

    /**
     * The column <code>ChineseStock.company.capitalizationvalue</code>. 流通市值
     */
    public final TableField<CompanyRecord, Double> CAPITALIZATIONVALUE = createField("capitalizationvalue", org.jooq.impl.SQLDataType.DOUBLE, this, "流通市值");

    /**
     * The column <code>ChineseStock.company.closeprice</code>. 昨日收盘价
     */
    public final TableField<CompanyRecord, Double> CLOSEPRICE = createField("closeprice", org.jooq.impl.SQLDataType.DOUBLE, this, "昨日收盘价");

    /**
     * The column <code>ChineseStock.company.companyname</code>. 公司名称
     */
    public final TableField<CompanyRecord, String> COMPANYNAME = createField("companyname", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "公司名称");

    /**
     * The column <code>ChineseStock.company.currentprice</code>. Current Price
     */
    public final TableField<CompanyRecord, Double> CURRENTPRICE = createField("currentprice", org.jooq.impl.SQLDataType.DOUBLE, this, "Current Price");

    /**
     * The column <code>ChineseStock.company.currentpricetimestamp</code>.
     */
    public final TableField<CompanyRecord, Timestamp> CURRENTPRICETIMESTAMP = createField("currentpricetimestamp", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>ChineseStock.company.last_update_date_time</code>. 最后一次更新时间
     */
    public final TableField<CompanyRecord, Timestamp> LAST_UPDATE_DATE_TIME = createField("last_update_date_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "最后一次更新时间");

    /**
     * The column <code>ChineseStock.company.marketcap</code>. 总市值
     */
    public final TableField<CompanyRecord, Double> MARKETCAP = createField("marketcap", org.jooq.impl.SQLDataType.DOUBLE, this, "总市值");

    /**
     * The column <code>ChineseStock.company.openprice</code>. 开盘价
     */
    public final TableField<CompanyRecord, Double> OPENPRICE = createField("openprice", org.jooq.impl.SQLDataType.DOUBLE, this, "开盘价");

    /**
     * The column <code>ChineseStock.company.oscillation</code>. 股票振幅
     */
    public final TableField<CompanyRecord, Double> OSCILLATION = createField("oscillation", org.jooq.impl.SQLDataType.DOUBLE, this, "股票振幅");

    /**
     * The column <code>ChineseStock.company.pbr</code>. 市净率 Price-to-book ratio
     */
    public final TableField<CompanyRecord, Integer> PBR = createField("pbr", org.jooq.impl.SQLDataType.INTEGER, this, "市净率 Price-to-book ratio");

    /**
     * The column <code>ChineseStock.company.per</code>. 市盈率
     */
    public final TableField<CompanyRecord, Integer> PER = createField("per", org.jooq.impl.SQLDataType.INTEGER, this, "市盈率");

    /**
     * The column <code>ChineseStock.company.tradingvalue</code>. 成交额
     */
    public final TableField<CompanyRecord, Double> TRADINGVALUE = createField("tradingvalue", org.jooq.impl.SQLDataType.DOUBLE, this, "成交额");

    /**
     * The column <code>ChineseStock.company.tradingvolume</code>. 成交量
     */
    public final TableField<CompanyRecord, Double> TRADINGVOLUME = createField("tradingvolume", org.jooq.impl.SQLDataType.DOUBLE, this, "成交量");

    /**
     * The column <code>ChineseStock.company.turnoverrate</code>. 换手率
     */
    public final TableField<CompanyRecord, Double> TURNOVERRATE = createField("turnoverrate", org.jooq.impl.SQLDataType.DOUBLE, this, "换手率");

    /**
     * Create a <code>ChineseStock.company</code> table reference
     */
    public Company() {
        this("company", null);
    }

    /**
     * Create an aliased <code>ChineseStock.company</code> table reference
     */
    public Company(String alias) {
        this(alias, COMPANY);
    }

    private Company(String alias, Table<CompanyRecord> aliased) {
        this(alias, aliased, null);
    }

    private Company(String alias, Table<CompanyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chinesestock.CHINESESTOCK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CompanyRecord> getPrimaryKey() {
        return Keys.KEY_COMPANY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CompanyRecord>> getKeys() {
        return Arrays.<UniqueKey<CompanyRecord>>asList(Keys.KEY_COMPANY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Company as(String alias) {
        return new Company(alias, this);
    }

    /**
     * Rename this table
     */
    public Company rename(String name) {
        return new Company(name, null);
    }
}
